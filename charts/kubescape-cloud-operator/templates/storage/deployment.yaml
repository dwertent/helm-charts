{{- if .Values.storage.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.storage.name }}
  namespace: {{ .Values.ksNamespace }}
  labels:
    {{ .Values.storage.labels | toYaml  | nindent 4 }}
spec:
  replicas: {{ .Values.storage.replicaCount }}
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{ .Values.storage.labels | toYaml | nindent 6 }}
  template:
    metadata:
      labels:
      {{- if .Values.otelCollector.enabled }}
        otel: enabled
      {{- end }}
        {{ .Values.storage.labels | toYaml | nindent 8 }}
    spec:
      serviceAccountName: {{ .Values.storage.name }}
      securityContext:
        runAsUser: 100
        fsGroup: 101
      containers:
      - name: apiserver
        image: {{ printf "%s:%s" .Values.storage.image.repository .Values.storage.image.tag  | quote }}
        imagePullPolicy: {{ .Values.storage.image.pullPolicy | quote }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
        env:
          - name: "GOMEMLIMIT"
            value: "{{ .Values.storage.resources.requests.memory }}B"
          - name: OTEL_COLLECTOR_SVC
            value: "otel-collector:4317"
        volumeMounts:
          - name: "data"
            mountPath: "/data"
          - name: {{ .Values.global.cloudConfig }}
            mountPath: /etc/config
            readOnly: true
      volumes:
        - name: "data"
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.name }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: {{ .Values.global.cloudConfig }}
          configMap:
            name: {{ .Values.global.cloudConfig }}
            items:
            - key: "clusterData"
              path: "clusterData.json"
{{- end }}
